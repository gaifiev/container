# Контекст
# Предположим, что мы хотим найти элемент в массиве (получить
# его индекс). Мы можем это сделать просто перебрав все элементы.
# Но что, если массив уже отсортирован? В этом случае можно
# использовать бинарный поиск. Принцип прост: сначала берём
# элемент находящийся посередине и сравниваем с тем, который мы
# хотим найти. Если центральный элемент больше нашего,
# рассматриваем массив слева от центрального, а если больше -
# справа и повторяем так до тех пор, пока не найдем наш элемент.
# ● Ваша задача
# Написать программу на любом языке в любой парадигме для
# бинарного поиска. На вход подаётся целочисленный массив и
# число. На выходе - индекс элемента или -1, в случае если искомого
# элемента нет в массиве.

arr = [1, 3, 4, 6, 7, 8, 10, 13, 14]
element = 4


def binarySearch(arr, element):
    left = 0
    right = len(arr) - 1

    while left <= right:
        avg = (left + right) // 2

        if arr[avg] == element:
            return avg
        elif arr[avg] < element:
            left = avg + 1
        else:
            right = avg - 1

    return -1


result = binarySearch(arr, element)

if result != -1:
    print(f"Элемент {element} найден по индексу [{result}]")
else:
    print(f"Элемент {element} не найден")
